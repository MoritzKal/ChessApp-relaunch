server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 1s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: container
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: service
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: project
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            level: level
            message: message
            run_id: run_id
            dataset_id: dataset_id
            model_id: model_id
            model_version: model_version
            username: username
            component: component
      - labels:
          level:
          run_id:
          dataset_id:
          model_id:
          model_version:
          username:
          component:
  - job_name: 'serve'
    # This job looked like a Prometheus scrape; promtail doesn't support metrics_path here.
    # If you want to collect logs from the 'serve' container, the 'docker' job above already does it.
    # Remove invalid fields to avoid promtail startup failure.
    static_configs: []
