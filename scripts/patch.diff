--- a/scripts/make-dev-jwt.sh
+++ b/scripts/make-dev-jwt.sh
@@
-#!/usr/bin/env bash
-set -euo pipefail
-
-# Secret aus deiner .env (APP_SECURITY_JWT_SECRET)
-secret="${JWT_SECRET:-${APP_SECURITY_JWT_SECRET:-dev-secret}}"
#!/usr/bin/env bash
set -euo pipefail

# Secret-Ermittlung: bevorzugt JWT_SECRET, dann APP_SECURITY_JWT_SECRET.
# Versuche zusätzlich .env einzulesen, falls lokal nicht exportiert.
if [ -z "${JWT_SECRET:-}" ] && [ -z "${APP_SECURITY_JWT_SECRET:-}" ]; then
  # .env im Repo-Root
  if [ -f .env ]; then
    # Nur Zeile extrahieren, keine Ausführung fremder Inhalte
    APP_SECURITY_JWT_SECRET_FROM_FILE="$(grep -E '^APP_SECURITY_JWT_SECRET=' .env | tail -n1 | cut -d= -f2- | tr -d '"' || true)"
    export APP_SECURITY_JWT_SECRET="${APP_SECURITY_JWT_SECRET:-$APP_SECURITY_JWT_SECRET_FROM_FILE}"
  fi
  # optional: infra/.env
  if [ -z "${APP_SECURITY_JWT_SECRET:-}" ] && [ -f infra/.env ]; then
    APP_SECURITY_JWT_SECRET_FROM_FILE="$(grep -E '^APP_SECURITY_JWT_SECRET=' infra/.env | tail -n1 | cut -d= -f2- | tr -d '"' || true)"
    export APP_SECURITY_JWT_SECRET="${APP_SECURITY_JWT_SECRET:-$APP_SECURITY_JWT_SECRET_FROM_FILE}"
  fi
fi

secret="${JWT_SECRET:-${APP_SECURITY_JWT_SECRET:-}}"
if [ -z "$secret" ]; then
  echo "ERROR: Kein JWT-Secret gefunden. Bitte exportiere APP_SECURITY_JWT_SECRET oder JWT_SECRET (gleiches Secret wie der Server)." >&2
  exit 2
fi
@@
 header='{"alg":"HS256","typ":"JWT"}'
 now=$(date +%s)
 exp=$((now+3600))
 payload=$(jq -nc --arg sub dev-user --arg iss chessapp-dev --arg aud api --arg scope read \
   --argjson iat "$now" --argjson exp "$exp" \
   '{sub:$sub, iss:$iss, aud:$aud, scope:$scope, iat:$iat, exp:$exp}')
@@
 h=$(printf '%s' "$header"  | b64url)
 p=$(printf '%s' "$payload" | b64url)
 sig=$(printf '%s' "$h.$p" | openssl dgst -binary -sha256 -hmac "$secret" | b64url)
 
 echo "$h.$p.$sig"
